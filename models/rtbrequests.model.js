const mongoose = require('mongoose')
const { ObjectId } = mongoose.Schema.Types

const rtbrequestSchema = new mongoose.Schema({
    bidreq:{
        ext:{emr:{type:String}},
        source:{
            ext:{
                schain:{
                    nodes:[{
                        hp:{type:Number},
                        asi:{type:String},
                        sid:{type:String}
                    }],
                    complete:{type:Number},
                    ver:{type:String}
                }
            },
            pchain:{type:String},
            fd:{type:Number}
        },
        tmax:{type:Number},
        at:{type:Number},
        user:{
            ext:{
                sessiondepth:{type:Number}
            },
            id:{type:String}
        },
        device:{
            ext:{
                xtf:{type:String}
            },
            connectiontype:{type:Number},
            carrier:{type:String},
            language:{type:String},
            js:{type:Number},
            osv:{type:String},
            os:{type:String},
            model:{type:String},
            make:{type:String},
            devicetype:{type:Number},
            ip:{type:String},
            lmt:{type:String},
            geo:{
                utcoffset:{type:Number},
                zip:{type:String},
                region:{type:String},
                country:{type:String}
            },
            ua:{type:String}
        },
        app:{
            content:{
                language:{type:String},
                livestream:{type:Number},
                url:{type:String}
            },
            publisher:{
                id:{type:String}
            },
            cat:[{type:String}],
            storeurl:{type:String},
            bundle:{type:String},
            name:{type:String},
            id:{type:String}
        },
        imp:[
            {
                exp:{type:String},
                pmp:{
                    deals:[
                        {
                            at:{type:String},
                            bidfloor:{type:Number},
                            id:{type:String},
                            bidfloorcur:{type:String}
                        }
                    ],
                    private_auction:{type:String}
                },
                secure:{type:Number},
                bidfloorcur:{type:String},
                bidfloor:{type:Number},
                tagid:{type:String},
                instl:{type:String},
                banner:{
                    ext:{
                        sizes:[
                            {
                                fmt:[{type:Number}],
                                h:{type:Number},
                                w:{type:Number}
                            }
                        ]
                    },
                    topframe:{type:Number},
                    pos:{type:Number},
                    h:{type:Number},
                    w:{type:Number},
                    battr:[{type:Number}],
                    api:[{type:Number}]
                },
                id:{type:String}
            }
        ],
        id:{type:String}
    },
    bidid:{type:String},
    imp:[
        {
            exp:{type:Number},
            pmp:{
                deals:[
                    {
                        at:{type:Number},
                        bidfloor:{type:Number},
                        id:{type:String},
                        bidfloorcur:{type:String}
                    }
                ],
                private_auction:{type:Number}
            },
            secure:{type:Number},
            bidfloorcur:{type:String},
            bidfloor:{type:Number},
            tagid:{type:String},
            instl:{type:Number},
            banner:{
                ext:{
                    sizes:[
                        {
                            fmt:[{type:Number}],
                            h:{type:Number},
                            w:{type:Number}
                        }
                    ]
                },
                topframe:{type:Number},
                pos:{type:Number},
                h:{type:Number},
                w:{type:Number},
                battr:[{type:Number}],
                api:[{type:Number}]
            },
            id:{type:String}
        }
    ],
    app:{
        content:{
            language:{type:String},
            livestream:{type:Number},
            url:{type:String}
        },
        publisher:{
            id:{type:String}
        },
        cat:[{type:String}],
        storeurl:{type:String},
        bundle:{type:String},
        name:{type:String},
        id:{type:String}
    },
    device:{
        ext:{
            xtf:{type:String}
        },
        connectiontype:{type:Number},
        carrier:{type:String},
        language:{type:String},
        js:{type:Number},
        osv:{type:String},
        os:{type:String},
        model:{type:String},
        make:{type:String},
        devicetype:{type:Number},
        ip:{type:String},
        lmt:{type:String},
        geo:{
            utcoffset:{type:Number},
            zip:{type:String},
            region:{type:String},
            country:{type:String}
        },
        ua:{type:String}
    },
    user:{
        ext:{
            sessiondepth:{type:Number}
        },
        id:{type:String}
    },
    at:{type:String},
    tmax:{type:String},
    source:{
        ext:{
            schain:{
                nodes:[{
                    hp:{type:Number},
                    asi:{type:String},
                    sid:{type:String}
                }],
                complete:{type:Number},
                ver:{type:String}
            }
        },
        pchain:{type:String},
        fd:{type:Number}
    },
    ext:{emr:{type:Number}},
    Type:{type:String},
    bidstatus:{type:Boolean}
},{timestamps:true})

mongoose.model('Rtbrequest',rtbrequestSchema)